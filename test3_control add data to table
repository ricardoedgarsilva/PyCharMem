import sys
import random
from PyQt6.QtWidgets import QApplication, QMainWindow, QTableWidget, QTableWidgetItem, QVBoxLayout, QWidget
from PyQt6.QtCore import QThread, pyqtSignal

class RandomValueThread(QThread):
    random_values_generated = pyqtSignal(list)

    def __init__(self):
        super().__init__()

    def run(self):
        while True:
            random_values = [random.randint(0, 100) for _ in range(3)]
            self.random_values_generated.emit(random_values)
            self.sleep(1)

class RandomTableApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.init_ui()

        self.random_value_thread = RandomValueThread()
        self.random_value_thread.random_values_generated.connect(self.add_random_values)
        self.random_value_thread.start()

    def init_ui(self):
        self.setWindowTitle('Random Table')

        self.table_widget = QTableWidget()
        self.table_widget.setColumnCount(3)
        self.table_widget.setHorizontalHeaderLabels(['A', 'B', 'C'])

        layout = QVBoxLayout()
        layout.addWidget(self.table_widget)

        container = QWidget()
        container.setLayout(layout)
        self.setCentralWidget(container)

    def add_random_values(self, random_values):
        row_position = self.table_widget.rowCount()
        self.table_widget.insertRow(row_position)

        for col, value in enumerate(random_values):
            self.table_widget.setItem(row_position, col, QTableWidgetItem(str(value)))

if __name__ == '__main__':
    app = QApplication(sys.argv)

    main_win = RandomTableApp()
    main_win.show()

    sys.exit(app.exec())
